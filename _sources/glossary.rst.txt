========
Glossary
========

.. glossary::

    Catalog
        The Catalog is the name of the internal database of |project| where all
        the :term:`items` are indexed to allow a quick search.

    CatalogItem
        The class name of an :term:`item`.

    Console
        The Console window gives access to the output of application's log. It
        should be your first destination in case of error or unexpected
        behavior to check if a plugin emitted a informational/warning/error
        message.

        It also gives you an interactive access to the embedded Python
        interpreter.

        .. image:: images/console.png
            :alt: |project|'s Console
            :align: center

    InstanceID
        |project| allows the code source of its packages to be modified at
        runtime by automatically reloading them every time a modification is
        done.

        The InstanceID number is an unsigned integer internally managed by the
        application and assigned at runtime to each :term:`package`, each time
        they are (re)loaded.

        It is also used to ensure only the latest instance of a given package
        has write access to its section of the :term:`Catalog`.

        Read :doc:`api/overview` for more information.

    Item
    Items
        An item is the data unit of the :term:`Catalog` (|project|'s internal
        database). It is a simple data structure, created by the
        :term:`plugins`, that has some properties like a display name (label),
        a category (File, URL, Command Line, ...), a reference to the parent
        :term:`plugin`, etc...

    LaunchBox
        The L(a)unchBox is |project|'s main dialog window, from which you can
        make a search and launch the selected :term:`item`. It can be opened by
        pressing the :kbd:`Ctrl+Win+K` combination (by default).

        More info in the :doc:`first` chapter.

        .. image:: images/wndrun.png
            :alt: |project|'s LaunchBox
            :align: center

    Package
    Packages
        A Package is a container of one or several :term:`plugins` and that
        represents a unique feature visible to the user.

        This container holds the source code of its plugins, their dependencies,
        a default configuration file, if any, and optionally some documentation.

        Its content can be stored in a directory or packed in an archive to ease
        its redistribution (i.e. a :file:`*.keypirinha-package` file, which is
        actually a regular zip archive).

        Read :doc:`packages` for more information.

    Plugin
    Plugins
        In the context of |project|, a Plugin is a software component written in
        Python3_ that extends the base features of the application. It is always
        encapsulated in a :term:`package`.

    Repository
    Repositories
        A Repository is a directory dedicated to the storage of
        :term:`packages`. It also defines the way Packages are stored (i.e.:
        loose files or packed in a single archive).
